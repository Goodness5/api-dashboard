// import { endpoints } from "@/lib/endpoints";

export const updatedEndpoints = [
  {
    path: "/api/thread/{thread_id}/agent/start",
    method: "POST",
    description: "Start an agent for a specific thread in the background.",
    category: "Agent Management",
    pathParams: ["thread_id"],
    requestBody: JSON.stringify({
      model_name: "anthropic/claude-3-7-sonnet-latest",
      enable_thinking: false,
      reasoning_effort: "low",
      stream: true,
      enable_context_manager: false,
    }, null, 2),
    responseExample: JSON.stringify({ success: true, message: "Agent started." }, null, 2),
  },
  {
    path: "/api/agent-run/{agent_run_id}/stop",
    method: "POST",
    description: "Stop a running agent.",
    category: "Agent Management",
    pathParams: ["agent_run_id"],
    responseExample: JSON.stringify({ success: true, message: "Agent stopped." }, null, 2),
  },
  {
    path: "/api/thread/{thread_id}/agent-runs",
    method: "GET",
    description: "Get all agent runs for a thread.",
    category: "Agent Management",
    pathParams: ["thread_id"],
    responseExample: JSON.stringify({ agent_runs: [] }, null, 2),
  },
  {
    path: "/api/signup",
    method: "POST",
    description: "Signup a new user.",
    category: "Authentication",
    requestBody: JSON.stringify({ email: "user@example.com", password: "password123" }, null, 2),
    responseExample: JSON.stringify({ access_token: "token", token_type: "bearer" }, null, 2),
  },
  {
    path: "/api/signin",
    method: "POST",
    description: "Signin an existing user.",
    category: "Authentication",
    requestBody: JSON.stringify({ email: "user@example.com", password: "password123" }, null, 2),
    responseExample: JSON.stringify({ access_token: "token", token_type: "bearer" }, null, 2),
  },
  {
    path: "/api/agent-run/{agent_run_id}",
    method: "GET",
    description: "Get agent run status and responses.",
    category: "Agent Management",
    pathParams: ["agent_run_id"],
    responseExample: JSON.stringify({ status: "running", responses: [] }, null, 2),
  },
  {
    path: "/api/agent-run/{agent_run_id}/stream",
    method: "GET",
    description: "Stream the responses of an agent run.",
    category: "Agent Management",
    pathParams: ["agent_run_id"],
    queryParams: ["token"],
    responseExample: JSON.stringify({ stream: true }, null, 2),
  },
  {
    path: "/api/sandboxes/{sandbox_id}/files",
    method: "POST",
    description: "Create a file in the sandbox using direct file upload.",
    category: "Sandbox Management",
    pathParams: ["sandbox_id"],
    requestBody: JSON.stringify({ path: "path/to/file", file: "<binary>" }, null, 2),
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/sandboxes/{sandbox_id}/files/json",
    method: "POST",
    description: "Create a file in the sandbox using JSON.",
    category: "Sandbox Management",
    pathParams: ["sandbox_id"],
    requestBody: JSON.stringify({ path: "path/to/file", content: "file content" }, null, 2),
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/sandboxes/{sandbox_id}/files/content",
    method: "GET",
    description: "Read a file from the sandbox.",
    category: "Sandbox Management",
    pathParams: ["sandbox_id"],
    queryParams: ["path"],
    responseExample: JSON.stringify({ content: "file content" }, null, 2),
  },
  {
    path: "/api/project/{project_id}/sandbox/ensure-active",
    method: "POST",
    description: "Ensure that a project's sandbox is active and running.",
    category: "Sandbox Management",
    pathParams: ["project_id"],
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/logout",
    method: "POST",
    description: "Logout the current user.",
    category: "Authentication",
    headers: ["authorization"],
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/password/reset-request",
    method: "POST",
    description: "Request a password reset.",
    category: "Authentication",
    requestBody: JSON.stringify({ email: "user@example.com" }, null, 2),
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/password/reset-confirm",
    method: "POST",
    description: "Confirm a password reset.",
    category: "Authentication",
    requestBody: JSON.stringify({ token: "reset-token", new_password: "newpassword123" }, null, 2),
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/profile",
    method: "GET",
    description: "Get the user's profile.",
    category: "User Management",
    headers: ["authorization"],
    responseExample: JSON.stringify({ id: "user-id", email: "user@example.com" }, null, 2),
  },
  {
    path: "/api/profile",
    method: "PUT",
    description: "Update the user's profile.",
    category: "User Management",
    headers: ["authorization"],
    requestBody: JSON.stringify({ email: "newemail@example.com" }, null, 2),
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/api-keys",
    method: "POST",
    description: "Create a new API key.",
    category: "API Key Management",
    headers: ["authorization"],
    requestBody: JSON.stringify({ description: "New API key" }, null, 2),
    responseExample: JSON.stringify({ key_id: "key-id", api_key: "api-key" }, null, 2),
  },
  {
    path: "/api/api-keys",
    method: "GET",
    description: "List all API keys.",
    category: "API Key Management",
    headers: ["authorization"],
    responseExample: JSON.stringify({ keys: [] }, null, 2),
  },
  {
    path: "/api/api-keys/{key_id}/regenerate",
    method: "POST",
    description: "Regenerate an API key.",
    category: "API Key Management",
    pathParams: ["key_id"],
    headers: ["authorization"],
    responseExample: JSON.stringify({ key_id: "key-id", api_key: "new-api-key" }, null, 2),
  },
  {
    path: "/api/api-keys/{key_id}",
    method: "DELETE",
    description: "Delete an API key.",
    category: "API Key Management",
    pathParams: ["key_id"],
    headers: ["authorization"],
    responseExample: JSON.stringify({ success: true }, null, 2),
  },
  {
    path: "/api/api-keys/validate",
    method: "GET",
    description: "Validate an API key.",
    category: "API Key Management",
    headers: ["x-api-key"],
    responseExample: JSON.stringify({ valid: true }, null, 2),
  },
  {
    path: "/api/health-check",
    method: "GET",
    description: "Perform a health check.",
    category: "System",
    responseExample: JSON.stringify({ status: "healthy" }, null, 2),
  }
];
